name: CI/CD

# Controls when the workflow will run
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      
      # Runs a set of commands using the runners
      - name: Checkout code
        uses: actions/checkout@v2
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Aws Copnnect
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Deploy ecr
        uses: actions/checkout@v2
        run: |
          docker login -u ${{ secrets.DOCKER_LOGIN }} -p ${{ secrets.DOCKER_PASS }} docker.io
          docker build -t marcosjr12/flaskapp:latest .
          docker image push marcosjr12/flaskapp:latest
          aws ecs update-service --cluster flaskcluster --service flaskapp-service --force-new-deployment
